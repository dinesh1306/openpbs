.\" Copyright (C) 1994-2018 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of the PBS Professional("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" PBS Pro is free software. You can redistribute it and/or modify it under the
.\" terms of the GNU Affero General Public License as published by the Free
.\" Software Foundation, either version 3 of the License, or (at your option) any
.\" later version.
.\"
.\" PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
.\" WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
.\" FOR A PARTICULAR PURPOSE.
.\" See the GNU Affero General Public License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" For a copy of the commercial license terms and conditions,
.\" go to: (http://www.pbspro.com/UserArea/agreement.html)
.\" or contact the Altair Legal Department.
.\"
.\" Altair’s dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of PBS Pro and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair’s trademarks, including but not limited to "PBS™",
.\" "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
.\" trademark licensing policies.
.\"
.TH pbs_queue_attributes 7B "28 January 2016" Local "PBS Professional"
.SH NAME
pbs_queue_attributes - pbs queue attributes
.SH DESCRIPTION
.LP
Queues are either routing queues or execution queues.  The attributes
listed here are divided into three sets: those that apply to both 
routing and execution queues, those that apply only to execution queues,
and those that apply only to routing queues.

Incompatible Limit Attributes
.br
The old and new limit attributes are incompatible.  
If any of one kind is set, none of the other kind can be set.
All of one kind must be unset in order to set any of the other kind.
.br

Unless otherwise stated, a queue attribute can be read by user, Operator,
and Manager, and can be set by Operator and Manager only.

.B Routing and Execution Queue Attributes
.br
The following attributes apply to both routing and execution queues.  

.RS .25i

.IP acl_group_enable
When true directs the server to use the queue group
access control list
.I acl_groups.
.br
Format: Boolean
.br
Default value: false = disabled.
.br
Python attribute value type: bool

.IP acl_groups
List of groups which are allowed or denied access to this queue.
The groups in the list are groups on the server host, not submitting
hosts.
More specific entries should be listed before more general, because the
list is read left-to-right, and the first match determines access.
.br
Format: String: "[+|-]group_name[,...]"
.br
Default value: all groups allowed.
.br
Python attribute value type: pbs.acl

.IP acl_host_enable
When true directs the server to use the 
.I acl_hosts
access list.
.br
Format: Boolean
.br
Default value: false = disabled.
.br
Python attribute value type: bool

.IP acl_hosts
List of hosts from which jobs may be submitted to this queue.
More specific entries should be listed before more general, because the
list is read left-to-right, and the first match determines access.
.br
Format: String: "[+|-]hostname[...]"
.br
Default value: all hosts allowed.
.br
Python attribute value type: pbs.acl

.IP acl_user_enable
Attribute which when true directs the server to use the the
.I acl_users
List of users allowed or denied access to this queue.
.br
Format: Boolean
.br
Default value: disabled.
.br
Python attribute value type: bool

.IP acl_users
List of users allowed or denied access to this queue.
More specific entries should be listed before more general, because the
list is read left-to-right, and the first match determines access.
.br
Format: String: "[+|-]user[@host][,...]"
.br
Default value: all users allowed.
.br
Python attribute value type: pbs.acl

.IP backfill_depth
Modifies backfilling behavior for this queue.  Sets the number of jobs 
that are to be backfilled 
around in this queue.  When unset, backfill depth is set to 1.
.br
Can be set by Operator or Manager.
.br
Format: Integer.  Must be >=1
.br
Default: 1
.br
Python type: int

.IP enabled
Determines whether queue will accept new jobs.  When false the queue is \*Qdisabled\*U
and will not accept jobs.  
.br
Format: Boolean
.br
Default value: disabled.
.br
Python attribute value type: bool

.IP from_route_only
When true, this queue will only accept jobs from a routing queue.
Requires manager privilege to set or alter.
.br
Format: boolean
.br
Default value: disabled.
.br
Python attribute value type: bool

.IP max_array_size
The maximum number of subjobs (separate indices) that are allowed in an array
job.
.br
Format: integer
.br
Default value: none, no limit.
.br
Python attribute value type: int

.IP max_queuable
Old limit attribute.  Incompatible with new limit attributes.
The maximum number of jobs allowed to reside in the queue at any given time.
.br
Format: integer
.br
Default value: infinite.
.br
Python attribute value type: int

.IP max_queued
Limit attribute.  The maximum number of jobs allowed to be queued
in or running from this queue.  Can be specified for projects, users, groups, or all.
Cannot be used with old limit attributes. 
.br
Format: Limit specification.  See 
.B FORMATS.
.IP

.IP max_queued_res.<resource>
Limit attribute.  The maximum amount of the specified resource 
allowed to be allocated to jobs queued in or running from this queue.
Can be specified for projects, users, groups, or all.
Cannot be used with old limit attributes.  
.br
Format: Limit specification.  See 
.B FORMATS.
.IP

.IP max_running
Old limit attribute.  Incompatible with new limit attributes.
For an execution queue, this is the largest number of jobs allowed to 
be running at any given time.  For a routing queue, this is the largest
number of jobs allowed to be transiting from this queue at any given 
time.
.br
Format: integer.
.br
Python attribute value type: int

.IP node_group_key
Specifies the resources to use for node grouping.  Overrides server's 
.I node_group_key.  
Specified resources must be of string_array type.  
.br
Format: string_array.  
.br
Default value: disabled.  
.br
Example:
.RS 11
Qmgr> set queue QUEUE node_group_key=RESOURCE
.RE
.IP
Python attribute value type: pbs.node_group_key

.IP Priority
The priority of this queue compared to other queues on this
server.  Priority can define a queue as express queue.  See 
.I preempt_queue_prio
in the pbs_sched(8B) man page.  Used for execution queues only; priority 
has no meaning for routing queues.
.br
Format: Integer.
.br
Valid values: -1024 to 1023
.br
Python attribute value type: int

.IP queued_jobs_threshold
Limit attribute.  The maximum number of jobs allowed
to be queued in this queue.  Can be specified for
projects, users, groups, or all.  Cannot be used with old limit
attributes.
Format: limit specification.
Default value: No default

.IP queued_jobs_threshold_res
Limit attribute.  The maximum amount of the specified resource allowed
to be allocated to jobs queued in this queue.  Can be specified for
projects, users, groups, or all.  Cannot be used with old limit
attributes.
Format: limit specification.
Default value: No default

.IP queue_type
The type of the queue: execution or route.
Requires manager privilege to set or alter.
.br
Format: String.  Must be one of "execution", "e", "route", "r".
This attribute must be explicitly set.
.br
Python attribute value type: PBS queue type constants: 
pbs.QUEUETYPE_EXECUTION or pbs.QUEUETYPE_ROUTE

.IP require_cred
Specifies the credential type required.  All jobs submitted to the named 
queue without the specified credential will be rejected.  
Not supported under Windows.
.br
Requires manager privilege to set or alter.
.br
.br
Format: string: 
.I krb5
or 
.I dce.
.br
Default value: unset
.br
Python attribute value type: str

.IP require_cred_enable
Directs the Server to use the credential authentication method specified by 
.I require_cred 
for this queue.
Not supported under Windows.
.br
Requires manager privilege to set or alter.  
.br
Format: boolean
.br
Default: false = disabled
.br
Python attribute value type: bool

.IP resources_default
The list of default resource values which are set as limits for a job 
residing in this queue and for which the job did not specify a limit.  
If not explicitly set, the default limit for a job is determined by
the first of the following attributes which is set: server's resources_default,
queue's resources_max, server's resources_max.  If none of these are set, the
job will get unlimited resource usage.
.br
Format: String: "resources_default.<resource>=<value>"
.br
Default value: none.  
.br
Python attribute value type: dictionary:
.br
.RS 10
resources_default["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP resources_max
The maximum amount of each resource which can be requested by a single job
in this queue.  The queue value supersedes any server wide maximum limit.
.br
Format: String: "resources_max.<resource>=<value>"
.br
Default value: infinite usage.
.br
Python attribute value type: dictionary:
.br
.RS 10
resources_max["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP resources_min
The minimum amount of each resource which can be requested by a single job
in this queue.
.br
Format: String: "resources_min.<resource>=<value>"
.br
Default value: zero usage.
.br
Python attribute value type: dictionary:
.br
.RS 10
resources_min["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP started\ 
Jobs may be scheduled for execution from this queue.
When false, the queue is considered \*Qstopped.\*U
.br
Format: Boolean
.br
Default: False
.br
Python attribute value type: bool

.IP state_count
The total number of jobs in each state currently residing in the queue.
.br
This attribute is read-only.
.br
Format: String: "transiting=<value>,exiting=<value> ..."
.br
Python attribute value type: pbs.state_count

.IP total_jobs
The number of jobs currently residing in this queue.
.br
.br 
Format: Integer
.br
Python attribute value type: int

.RE
.LP
.B Execution Queue Attributes
.br
The following attributes apply only to execution queues:
.RS .25i

.IP "checkpoint_min "
Specifies the minimum number of minutes of CPU time or walltime allowed
between checkpoints of a job.  
If a user specifies a time less than this
value, this value is used instead.  The value given in 
.I checkpoint_min
is used for both CPU minutes and walltime minutes.
.br
Format: Integer.
.br
Default: None.
.br
Python attribute value type: pbs.duration

.IP default_chunk
The list of resources which will be inserted into each chunk of a job's select 
specification if the corresponding resource is not specified by the user.
This provides a means for a site to be sure a given resource is properly 
accounted for even if not specified by the user.
.br
Format: String
.br
Python attribute value type: dictionary:
.br
.RS 10
default_chunk["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP hasnodes
This attribute is set true if there are nodes associated with this queue.
.br
This attribute is read-only.
.br
Format: Boolean
.br
Python attribute value type: bool

.IP resources_available
The list of resources and amounts available to jobs running in this queue.
The sum of the resource of each type used by all jobs running from this queue
cannot exceed the total amount listed here.
.br
Format: String: "resources_available.resource_name=value"
.br
Python attribute value type: dictionary:
.br
.RS 10
resources_available["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP kill_delay
The amount of the time delay between the sending of SIGTERM and SIGKILL
when a qdel command is issued against a running job.  
.br
Format: integer
seconds
.br
Default value: 10 seconds.
.br
Python attribute value type: pbs.duration


.IP max_run
Limit attribute.  The maximum number of jobs allowed to be running 
from this queue.  Can be specified for projects, users, groups, or all.
Cannot be used with old limit attributes. 
.br
Format: Limit specification.  See 
.B FORMATS.
.IP

.IP max_run_res.<resource>
Limit attribute.  The maximum amount of the specified resource 
allowed to be allocated to jobs running from this queue.
Can be specified for projects, users, groups, or all.
Cannot be used with old limit attributes.  
.br
Format: Limit specification.  See 
.B FORMATS.
.IP

.IP max_run_res_soft.<resource>
Limit attribute.  Soft limit on the amount of the specified resource 
allowed to be allocated to jobs running from this queue.
Can be specified for projects, users, groups, or all.
Cannot be used with old limit attributes.  
.br
Format: Limit specification.  See 
.B FORMATS.
.IP

.IP max_run_soft
Limit attribute.  Soft limit on the number of jobs allowed to be running 
from this queue.  Can be specified for projects, users, groups, or all.
Cannot be used with old limit attributes.  
.br
Format: Limit specification.  See 
.B FORMATS.
.IP

.IP max_user_res
Old limit attribute.  Incompatible with new limit attributes.
The maximum amount of the specified resource that any single user may consume.
The named resource can be any valid PBS resource, e.g. "ncpus", "mem", "pmem",
etc.  
.br
Format: max_user_res.resource_name=value
.br
Default value: none.
.br
Example: set server max_user_res.ncpus=6
.br
Python attribute value type: dictionary:
.br
.RS 10
max_user_res["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP max_user_res_soft
Old limit attribute.  Incompatible with new limit attributes.
The soft limit on the amount of the specified resource that any single user may consume.
The named resource can be any valid PBS resource, e.g. "ncpus", "mem", "pmem",
etc.
If a user is consuming more than this amount of the specified resource,
their jobs are eligible to be preempted by jobs from users who are not over
their soft limit.
.br
Format: max_user_res_soft.resource_name=value
.br
Default value: none.
.br
Example: set server max_user_res_soft.ncpus=3
.br
Python attribute value type: dictionary:
.br
.RS 10
max_user_res_soft["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP max_user_run
Old limit attribute.  Incompatible with new limit attributes.
The maximum number of jobs owned by a single user that are allowed to be 
running from this queue at one time.  
.br
Format: Integer
.br
Default value: none.
.br
Python attribute value type: int

.IP max_user_run_soft
Old limit attribute.  Incompatible with new limit attributes.
The soft limit on the number of jobs owned by a single user that are allowed to be
running from this queue at one time.  If a user has more than this number of jobs
running, their jobs are eligible to be preempted by jobs from users who are not over
their soft limit.
.br
Format: integer
.br
Default value: none.
.br
Python attribute value type: int

.IP max_group_res
Old limit attribute.  Incompatible with new limit attributes.
The maximum amount of the specified resource that any single group may consume
in a complex.
The named resource can be any valid PBS resource, e.g. "ncpus", "mem", "pmem",
etc.  
.br
Format: max_group_res.resource_name=value
.br
Default value: none.
.br
Example: set server max_group_res.ncpus=6
.br
Python attribute value type: dictionary:
.br
.RS 10
max_group_res["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP max_group_res_soft
Old limit attribute.  Incompatible with new limit attributes.
The soft limit on the amount of the specified resource that any single group may consume
in a complex.
The named resource can be any valid PBS resource, e.g. "ncpus", "mem", "pmem",
etc.
If a group is consuming more than this amount of the specified resource,
their jobs are eligible to be preempted by jobs from groups who are not over
their soft limit.
.br
Format: max_group_res_soft.resource_name=value
.br
Default value: none.
.br
Example: set server max_group_res_soft.ncpus=3
.br
Python attribute value type: dictionary:
.br
.RS 10
max_group_res_soft["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP max_group_run
Old limit attribute.  Incompatible with new limit attributes.
The maximum number of jobs owned by a group that are
allowed to be running from this queue at one time.
.br
Format: integer
.br
Default value: none.
.br
Python attribute value type: int

.IP max_group_run_soft
Old limit attribute.  Incompatible with new limit attributes.
The maximum number of jobs owned by users in a single group that are
allowed to be running from this queue at one time.
If a group has more than this number of jobs
running, their jobs are eligible to be preempted by jobs from groups who are not over
their soft limit.
.br
Format: integer
.br
Default value: none.
.br
Python attribute value type: int

.IP resources_assigned
The total amount of certain types
of resources allocated to jobs running from this queue.
.br
This attribute is read-only.
.br
Format: String
.br
Python attribute value type: dictionary:
.br
.RS 10
resources_assigned["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.RE
.LP
.B Routing Queue Attributes
.br
The following attributes apply only to routing queues:
.RS .25i

.IP route_destinations
The list of destinations to which jobs may be routed.
Requires manager privilege to set or alter.
.br
Format: List of comma-separated strings of the form "queue_name[@server_host[:port]]"
.br
Default value: none.  Should be set to at least one valid destination.
.br
Example:  "here,there@remote,test@remote:15501"
.br
Python attribute value type: pbs.route_destinations

.IP alt_router
If true, a site-supplied alternative job routing function is used to determine
the destination for routing jobs from this queue.  Otherwise the default
round-robin router is used.
Requires manager privilege to set or alter.
.br
Format: boolean (see acl_group_enable)
.br
Default value: false.
.br
Python attribute value type: bool

.IP route_held_jobs
If true, jobs with a hold may be routed from this queue.  If false,
held jobs are not routed.
.br
Format: boolean (see acl_group_enable)
.br
Default value: false.
.br
Python attribute value type: bool

.IP route_waiting_jobs
If true, jobs with a future 
.I execution_time
attribute may be routed from this queue.  If false,
they are not to be routed.
.br
Format: boolean (see acl_group_enable)
.br
Default value: false.
.br
Python attribute value type: bool

.IP route_retry_time
Time delay between route retries.  Typically used when the network between
servers is down.  
.br
Format: Integer seconds
.br
Default value: 30 seconds
.br
Python attribute value type: pbs.duration

.IP route_lifetime
The maximum time a job is allowed to exist in a routing queue.  If the job
cannot be routed in this amount of time, the job is aborted.
If unset or set to a value of zero (0), the lifetime is infinite.
.br
Format: integer seconds
.br
Default infinite.
.br
Python attribute value type: pbs.duration

.RE



.SH FORMATS

.IP "Limit specification"
Limit attributes can be set, added to or removed from.

.RS 3 
Format for setting a limit-spec:
.RS 3
set server <limit attribute> = "[limit-spec=<limit>], [limit-spec=<limit>] ..."
.RE
Format for adding to a limit-spec:
.RS 3
set server <limit attribute> += "[limit-spec=<limit>], [limit-spec=<limit>] ..."
.RE
Format for removing from a limit-spec:
.RS 3
set server <limit attribute> -= "[limit-spec=<limit>], [limit-spec=<limit>] ..."
.br
or
.br
set server <limit attribute> -= "[limit-spec], [limit-spec] ..."
.RE

Where limit-spec is 
.RS 3
o:PBS_ALL
.br
p:PBS_GENERIC
.br
p:<project name>
.br
u:PBS_GENERIC
.br
u:<user name>
.br
g:PBS_GENERIC
.br
g:<group name>
.RE

The limit-spec can contain spaces anywhere except after the colon
(":").
.br
If there are comma-separated limit-specs, the entire string must be
enclosed in double quotes.
.br
A project name, user name, or group name containing spaces must be
enclosed in quotes.
.br
If a project name, user name or group name is quoted using double
quotes, and the entire string requires quotes, the outer enclosing
quotes must be single quotes.  Similarly, if the inner quotes are
single quotes, the outer quotes must be double quotes.
.br
PBS_ALL is a keyword which indicates that this limit applies to all
users.
.br
PBS_GENERIC is a keyword which indicates that this limit applies to
generic projects, users, or groups.
.br
When removing a limit, the limit value does not need to be specified.
.br
Examples of setting, adding, and removing: 
.br
.RS 3
set server max_run="[u:PBS_GENERIC=2], [g:group1=10], [o:PBS_ALL = 100]"
.br
set server max_run+="[u:user1=3], [g:PBS_GENERIC=8]"
.br
set server max_run-="[u:user2], [g:group3]"
.RE

See the 
.B PBS Professional Administrator's Guide.



.SH SEE ALSO
The 
.B PBS Professional Administrator's Guide, 
qmgr(1B)
