.\" Copyright (C) 1994-2018 Altair Engineering, Inc.
.\" For more information, contact Altair at www.altair.com.
.\"
.\" This file is part of the PBS Professional("PBS Pro") software.
.\"
.\" Open Source License Information:
.\"
.\" PBS Pro is free software. You can redistribute it and/or modify it under the
.\" terms of the GNU Affero General Public License as published by the Free
.\" Software Foundation, either version 3 of the License, or (at your option) any
.\" later version.
.\"
.\" PBS Pro is distributed in the hope that it will be useful, but WITHOUT ANY
.\" WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
.\" FOR A PARTICULAR PURPOSE.
.\" See the GNU Affero General Public License for more details.
.\"
.\" You should have received a copy of the GNU Affero General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.\"
.\" Commercial License Information:
.\"
.\" For a copy of the commercial license terms and conditions,
.\" go to: (http://www.pbspro.com/UserArea/agreement.html)
.\" or contact the Altair Legal Department.
.\"
.\" Altair’s dual-license business model allows companies, individuals, and
.\" organizations to create proprietary derivative works of PBS Pro and
.\" distribute them - whether embedded or bundled with other software -
.\" under a commercial license agreement.
.\"
.\" Use of Altair’s trademarks, including but not limited to "PBS™",
.\" "PBS Professional®", and "PBS Pro™" and Altair’s logos is subject to Altair's
.\" trademark licensing policies.
.\"
.\" End of macros 
.TH pbs_job_attributes 7B "1 February 2016" Local "PBS Professional"
.SH NAME
.B pbs_job_attributes 
\- attributes of PBS jobs
.SH DESCRIPTION
.LP
A PBS batch job has attributes which control various aspects of the job.
If an attribute is unset, the indicated default value is used.  

.B Alterable Attributes
.br
The following attributes can be altered:


.IP "Account_Name "
Used for accounting on some hosts.  
.br
Can be read and set by user, Operator, Manager.
.br
Format: String
.br
Default value: none.
.br
Python attribute value type: str

.IP "argument_list "

Job executable's argument list.  Shown if job is submitted with 
"-- <executable> [arglist]".
.br
Can be read and set by user, Operator, Manager.
.br
Format: 
.RS 11
.I <jsdl-hpcpa:Argument> <1st arg> </jsdl-hpcpa:Argument>
.br
.I <jsdl-hpcpa:Argument> <2nd arg> </jsdl-hpcpa:Argument>
.br
.I <jsdl-hpcpa:Argument> <nth arg> </jsdl-hpcpa:Argument>
.RE
.IP
Python attribute value type: str


.IP array
Specifies whether this job is a job array.
.br
Can be read and set by user.  Can be read by Manager and Operator.
.br
Format: Boolean
.br
Python attribute value type: bool

.IP array_indices_submitted
Job array attribute.  Complete list of indices of subjobs 
given at submission time.  Given as range, e.g. 1-100.
.br
Can be read and set by user.  Can be read by Manager and Operator.
.br
Format: String.
.br
Python attribute value type: pbs.range

.IP "block"
Specifies whether or not qsub will wait for the job to complete and
return the exit value of the job.  When true, qsub waits for the 
job to finish.  If qsub receives one of the
signals: SIGHUP, SIGINT, SIGQUIT or SIGTERM, it prints the
following message on stderr:
.RS
	qsub: wait for job <jobid> interrupted by signal <signal>
.br
Can be read and set by user.  Can be read by Manager and Operator.
.br
For X11 forwarding jobs, and jobs with 
.I interactive
and 
.I block
attributes set to
.I True, 
the job's exit status is not returned.
.br
Format: Boolean
.br
Default: False
.br
Python attribute value type: int
.RE

.IP "Checkpoint "
Determines when the job will be checkpointed.  An 
.I $action
script is required to checkpoint the job.  See the 
.B pbs_mom(8B)
man page. 
Allowable values:  
.RS
.IP c 5
Checkpointing is to be performed according to the interval, measured
in CPU time, set on the execution queue in which the job resides.
.IP "c=<minutes of CPU time>" 5
Checkpointing is to be performed at intervals of the specified number
of minutes of CPU time used by the job.  This value must be greater
than zero.  If the interval specified is less than that set on the
execution queue in which the job resides, the queue's interval is
used.
.br
Format: integer.  
.IP w 5
Checkpointing is to be performed according to the interval, measured
in walltime, set on the execution queue in which the job resides.
.IP "w=<minutes of walltime>" 5
Checkpointing is to be performed at intervals of the specified number
of minutes of walltime used by the job.  This value must be greater
than zero.  If the interval specified is less that that set on the
execution queue in which the job resides, the queue's interval is
used.
.br
Format: integer.  
.IP n 5
No checkpointing is to be performed.
.IP s 5
Checkpointing is to be performed only when the server is shut down.
.IP u 5
Unset.  Defaults to behavior when 
.I interval
argument is set to 
.I s.
.LP

Can be read and set by user, Operator, Manager.
.br
Format: String.
.br
Default value: 
.I u.
.br
Python attribute value type: pbs.checkpoint
.RE


.IP comment
An attribute for displaying comments about the job from the system.
.br
Can be read by user.  Can be read and set by Operator, Manager.
.br
Format: String
.br
Default value: none.
.br
Python attribute value type: str

.IP depend
The type of inter-job dependencies specified by the job owner.
.br
Can be read and set by user, Operator, Manager.
.br
Format: "type:jobid[,jobid...]"
.br
Default value: no dependencies.
.br
Python attribute value type: pbs.depend

.IP eligible_time
The amount of wall clock wait time a job has accrued because the job
is blocked waiting for resources.  For a job currently accruing eligible_time, if we
were to add enough of the right type of resources, the job would start
immediately.  
.br
Viewable via 
.B qstat -f 
by job owner, Manager and Operator.  Settable by Operator or Manager.
.br
Format: Duration
.br
Python attribute value type: pbs.duration

.IP "Error_Path "
The final path name for the file containing the job's standard error stream.
See the
.B qsub
and
.B qalter
command description for more detail.
.br
Can be read and set by user, Operator, Manager.
.br
Format: "[hostname:]pathname"
.br
Default value: (job_name).e(job_number).
.br
Python attribute value type: str

.IP "Executable "
Job's executable.  Shown if job is submitted with "-- <executable> [arglist]".
.br
Can be read and set by user, Operator, Manager.
.br
Format: "<jsdl-hpcpa:Executable> <name of executable> 
.br
\ \ \ \ \ \ \ \ \ </jsdl-hpcpa:Executable>"
.br
Python attribute value type: str

.IP "Execution_Time "
The time after which the job may execute.  The time is maintained in seconds
since Epoch.  If this time has not yet been reached, the job will not be
scheduled for execution and the job is said to be in
.B wait
state.  
.br
Can be read and set by user, Operator, Manager.
.br
Format: Datetime, "[[CCwYY]MMDDhhmm[.ss]"
.br
Default value: time 0, no delay.
.br
Python attribute value type: int

.IP exec_host
If the job is running, this is set to the name of the host or hosts on which
the job is executing.  
.br
Can be read by user, Operator, Manager.
.br
Format: String, in the form of "host/N[*C][+...]", where
"host" is the name of the host,  "N" is task slot number, starting with 0,
on that vnode, and "C" is the number of CPUs allocated to the job.
"*C" does not appear if C has a value of one.
.br
Python attribute value type: pbs.exec_host


.IP exec_vnode
List of chunks for the job.  Each chunk shows the name of the vnode(s)
from which it is taken, along with the host-level, consumable resources 
allocated from that vnode, and any AOE provisioned on this vnode for this job.  
If a vnode is allocated to the job but no resources 
from the vnode are used by the job, the vnode
name appears alone.  If a chunk is split across vnodes, the name of 
each vnode and its resources appear inside one pair of parentheses, 
joined with a plus sign ("+").
.br
Can be read by user.  Can be read and set by Manager, Operator.
.br
Format: Each chunk is enclosed in parentheses, and
chunks are connected by plus signs.  
.br
For a job which requested two chunks
that were satisfied by resources from three vnodes,
.I exec_vnode 
could look like 
.br
(vnodeA:ncpus=N:mem=X)+(vnodeB:ncpus=P:mem=Y+vnodeC:mem=Z).
.br
For a job which requested one chunk and exclusive use of a 2-vnode host,
where the chunk was satisfied by resources from one vnode,
.I exec_vnode 
could look like 
.br
(vnodeA:ncpus=N:mem=X)+(vnodeB).
.br
Python attribute value type: pbs.exec_vnode


.IP "group_list "
A list of 
.I group_names@hosts
which determines the group under which
the job is run on a given host.   
When a job is to be placed into execution,  the server will select a group
name according to the following ordered set of rules:
.RS
.IP 1. 3
Select the group name from the list for which the associated host name
matches the name of the execution host.
.IP 2. 3
Select the group name which has no associated host name, the
\*Qwild card name.\*U
.IP 3. 3
Use the login group for the user name under which the job will be run.
.RE
.IP
.br
Can be read and set by user, Operator, Manager.
.br
Format: "group_name[@host][,group_name[@host]...]".
.br
Python attribute value type: pbs.group_list


.IP "Hold_Types "
.RS
The set of holds currently applied to the job.  If the set is not null, 
the job will not be scheduled for execution and is said to be in the
.B hold
state.  Note,  the
.B hold
state takes precedence over the
.B wait
state.  
.br
Can be read and set by user, Operator, Manager.
.br
Format: string made up of the letters 'n', 'o', 'p', 's', 'u'
.br
Default value:
.I n, 
indicating no hold.
.br
Python attribute value type: pbs.hold_types

.RS
.IP n
No hold
.IP o
Other hold
.IP p
Bad password
.IP s
System hold
.IP u
User hold
.RE
.RE

.IP "interactive"
True if the job is an interactive PBS job.
.br
Can be read and set by user.  Can be read by Operator, Manager.
.br
For X11 forwarding jobs, and jobs with 
.I interactive
and 
.I block
attributes set to
.I True, 
the job's exit status is not returned.
.br
Format: Boolean
.br
Default value: false.
.br
.br
Python attribute value type: int

.IP "Job_Name "
The name assigned to the job by the 
.B qsub
or 
.B qalter
command.  
.br
Can be read and set by user, Operator, Manager.
.br
Format: string up to 15 characters, first character must be
alphabetic or numeric
.br
Default value: the base name of the job script or STDIN.
.br
Python attribute value type: str

.IP "Join_Path "
If the
.I Join_Path
attribute is
.B TRUE ,
then the job's standard error stream will be merged, inter-mixed, with the
job's standard output stream and placed in the file determined by the
.I Output_Path
attribute.  The
.I Error_Path
attribute is maintained, but ignored.  
.br
Can be read and set by user, Operator, Manager.
.br
Format: Boolean.
.br
Default value: false.
.br
Python attribute value type: pbs.join_path

.IP "Keep_Files "
If
.I Keep_Files
contains the values "o"
and/or "e"
the corresponding streams of the batch job will be
retained on the execution host upon job termination.  
.I Keep_Files
overrides the 
.I Output_Path
and
.I Error_Path
attributes.  
.br
Can be read and set by user, Operator, Manager.
.br
Format: "o", "e", "oe" or "eo"
.br
Default value: no keep, return files to submission host.
.br
Python attribute value type: pbs.keep_files

.IP "Mail_Points "
Identifies at which state changes the server will send mail about the job.
.br
Can be read and set by user, Operator, Manager.
.br
Format: string made up of one or more of the following letters:
.RS
.IP a 
Mail sent when job is aborted
.IP b 
Mail sent when job starts
.IP e 
Mail sent when job ends
.IP n
No mail is sent.  Cannot be combined with other options.
.LP

.br
Default value: 'a'
.br
Python attribute value type: pbs.mail_points
.RE

.IP "Mail_Users "
The set of users to whom mail may be sent when the job makes certain
state changes.  
.br
Can be read and set by user, Operator, Manager.
.br
Format: "user@host[,user@host]"
.br
Default value: job owner only.
.br
Python attribute value type: pbs.email_list

.IP "no_stdio_sockets"
.B Not used.

.IP "Output_Path "
The final path name for the file containing the job's standard output stream.
See the
.B qsub
and
.B qalter
command description for more detail.
.br
Can be read and set by user, Operator, Manager.
.br
Format: see error_path
.br
Default value: (job_name).o(job_number).
.br
Python attribute value type: str

.IP "Priority "
The job scheduling priority assigned by the user.
.br
Can be read and set by user, Operator, Manager.
.br
Format: "[+|-]nnnnn"; range: [-1024, +1023] inclusive
.br
Default value: undefined.
.br
Python attribute value type: int

.IP "project"

The job's project. A project is a way to tag jobs.  Each job can belong
to at most one project.

Format: String.
.br
Project name can contain any characters except for the following:
Slash ("/"), left bracket ("["), right bracket ("]"), double quote ("""), 
semicolon (";"), colon (":"), vertical bar ("|"), left angle bracket ("<"), 
right angle bracket (">"), plus ("+"), comma (","), question mark ("?"), 
and asterisk ("*").
.br
Default value: "_pbs_project_default".
.br
Python attribute value type: str

.IP "pset"
Shows the name of the placement set used by the job.  On BlueGene, specifies 
which partition should be used.
.br
Can be read by user, Operator.  Can be read and set by Manager.
.br
Format: String
.br
Python attribute value type: str

.IP "Rerunable "
The rerunnable flag given by the user.  Specifies whether or not the 
job should be requeued after failure of execution or during shutdown.
Does not affect how the job is handled in the event that the job was
unable to begin execution.  Job arrays are required to be rerunnable
and are rerunnable by default.
.br
Can be read and set by user, Operator, Manager.
.br
Format: "y" or "n", see Join_Path
.br
Default value: y, job is rerunnable.
.br
Python attribute value type: bool

.IP "Resource_List "
The list of resources required by the job.  The resource list is a set of
.I name=value
strings.  The meaning of 
.I name
and
.I value
is server-dependent.  The value also establishes the limit of usage of
that resource.  If not set, the value for a resource may be determined by
a queue or server default established by the administrator.
.br
Can be read and set by user, Operator, Manager.
.br
Default value: no usage or no limit depending on specific resource.
.br
.br
Python attribute value type: dictionary:
.br
.RS 10
Resource_List["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP run_count
The number of times the server thinks it has run the job.  Job is held when 
the value of this attribute goes above 20.
By default, starts at zero.
.br
Can be read and set by Manager and Operator.
.br
Format: Integer
.br
Python attribute value type: int

.IP "sandbox"
Specifies whether and where PBS creates job-specific staging 
and execution directories.
When set to PRIVATE, PBS creates job-specific staging and
execution directories under the directory specified in 
the 
.I $jobdir_root 
MOM configuration option.
When set to HOME or not set, PBS will use the job owner's home directory 
for staging and execution.
.br
User-settable via 
.B qsub -Wsandbox=<value>
or via a PBS directive.
.br
Not set by default.
.br
See the $jobdir_root MOM configuration option in 
.B pbs_mom.8B. 
.br
Can be read and set by user, Operator, Manager.
.br
Format: String
.br
Valid values: PRIVATE, HOME, O_WORKDIR
.br
Python attribute value type: str 

.IP sched_hint
No longer used.

.IP "Shell_Path_List "
A set of absolute paths of the program to process the job's script file.
If this is null, then the user's login shell on the execution host
is used.
.br
Can be read and set by user, Operator, Manager.
.br
Format: String: "path[@host][,path[@host]...]".
.br
Default value: null, login shell.
.br
Python attribute value type: pbs.path_list

.IP stagein
The list of files to be staged in prior to job execution.
.br
Can be read and set by user, Operator, Manager.
.br
Format: String: local_path@remote_host:remote_path
.br
Python attribute value type: pbs.staging_list

.IP stageout
The list of files to be staged out after job execution.
.br
Can be read and set by user, Operator, Manager.
.br
Format: String: local_path@remote_host:remote_path
.br
Python attribute value type: pbs.staging_list

.IP "Submit_arguments"
Job submission arguments given on the 
.B qsub
command line.  Available to all jobs.
.br
Can be read and set by user, Operator, Manager.
.br
Format: String.
.br
Python attribute value type: str

.IP "tobjob_ineligible"
Allows administrators to mark this job as ineligible for being the top job.
When 
.I True
, this job is not eligible to be the top job.
.br
Can be read and set by Manager.
.br
Format: Boolean
.br
Default: False

.IP umask
The initial umask of the job is set to the value of this attribute when the
job is created.  This may be changed by umask commands in the shell
initialization files such as .profile or .cshrc.
.br
Can be read and set by user, Operator, Manager.
.br
Default value: 077
.br
Python attribute value type: int

.IP "User_List "
The list of 
.I user@hosts
which determines the user name under which
the job is run on a given host.  
When a job is to be placed into execution,  the server will select a user
name from the list according to the following ordered set of rules:
.RS
.IP 1. 3
Select the user name from the list for which the associated host name
matches the name of the execution host.
.IP 2. 3
Select the user name which has no associated host name, the
wild card name.
.IP 3. 3
Use the
.I Job_Owner
as the user name.
.RE
.IP
.br
Can be read and set by user, Operator, Manager.
.br
Format: String: "user@host[,user@host ...]"
.br
Must be enclosed in double quotes if it contains commas.
.br
Default value: job owner name.
.br
Python attribute value type: pbs.user_list

.IP "Variable_List "
This is the list of environment variables passed with the
.I "Queue Job"
batch request.  
.br
Can be read and set by user, Operator, Manager.
.br
Note that PBS environment variables listed in the 
.B qsub(1B)
man page are not settable.
.br
Format: String: "name=value[,name=value...]".
.br
Python attribute value type: dictionary:
.br
.RS 10
Variable_List["<variable name>"]=<value> 
.br
.RE


.Tc Read-Only Job Attributes
.LP
.B Read-only Attributes
.br
The following attributes are read-only.  They are set by PBS
and are visible to users, Operators and Managers, but cannot be set by 
a person.  Unless otherwise stated, they are readable by user, Operator,
Manger.

.IP accounting_id\ 
Accounting ID for tracking accounting data not produced by PBS.
.br
Format: String
.br
Python attribute value type: str

.IP accrue_type
Indicates what kind of time the job is accruing.  Can be one of 0 (initial_time),
1 (ineligible_time), 2 (eligible_time), or 3 (run_time).  
.br
Readable by Manager only.
.br
Format: Integer
.br
Python attribute value type: int

.IP alt_id
For a few systems, the session id
is insufficient to track which processes belong to the job.  Where a different
identifier is required, it is recorded in this attribute.   If set, it will
also be recorded in the end-of-job accounting record.  May contain white spaces.
.IP
For jobs running in CPU sets, the 
.I alt_id 
holds the set name in a form
usable by the cpuset(1) command.
.IP
On Windows, holds PBS home directory.
.br
Format: String
.br
Python attribute value type: str

.IP array_id
Job array attribute. Applies to subjob.  Subjob's job array 
identifier.
.br
Format: String
.br
Python attribute value type: str

.IP array_index
Job array attribute.  Applies to subjob.  Subjob's index number.
.br
Format: String
.br
Python attribute value type: int

.IP array_indices_remaining
Job array attribute.  List of indices of subjobs still queued.  
Range or list of ranges, e.g. 500, 552, 596-1000.
.br
Format: String
.br
Python attribute value type: str

.IP array_state_count
Job array attribute.  Similar to state_count attribute for 
server and queue objects.  Lists number of subjobs in each state. 
.br
Format: String
.br
Python attribute value type: pbs.state_count

.IP ctime
The time that the job was created.
.br
Format: Integer (seconds since epoch)
.br
Python attribute value type: int

.IP egroup
If the job is queued in an execution queue, this attribute is set to the
group name under which the job is to be run.  
.br
Readable by Manager only.
.br
Format: String
.br
Python attribute value type: str

.IP estimated
List of values associated with job's estimated start time.  Used to
report jobs's start_time and exec_vnode information.  Can be set in a
hook or via qalter, but PBS will overwrite the values.  
.br
Allowable values: start_time, exec_vnode
.br
Format: estimated.start_time, estimated.exec_vnode
.br
Default: Unset
.br
Python attribute value type: Dictionary: estimated.<resource name>=<value>
where <resource name> is any resource

.IP etime
The time that the job became eligible to run, i.e. in a queued state while
residing in an execution queue.  
.br
Format: Integer (seconds since epoch)
.br
Python attribute value type: int

.IP euser
If the job is queued in an execution queue, this attribute is set to the
user name under which the job is to be run.  
.br
Readable by Manager only.
.br
Format: String.
.br
Python attribute value type: str

.IP Exit_status
Exit status of job.  Set to zero for successful execution.  If any
subjob of an array job has non-zero exit status, the array job has
non-zero exit status.  
.br
Format: Integer
.br
Python attribute value type: int

.IP hashname
No longer used.

.IP "jobdir"
Path of the job's staging and execution directory on the 
primary execution host.  Viewable via 
.B qstat -f.
.br
Format: String.
.br
Python attribute value type: str

.IP "Job_Owner "
The login name on the submitting host of the user who submitted the batch job.
.br
Format: String.
.br
Python attribute value type: str

.IP "job_state"
The state of the job.

.RS
.IP E
for Exiting.  The job has completed execution, with or without errors,
and the batch system is doing post-execution clean-up.
.IP H
for Held, one or more holds have been applied to the job.
.IP Q
for Queued.  The job resides in a execution or routing queue pending
execution or routing.  It is not in
.B held
or
.B waiting
state.
.IP R
for Running.  The job resides in a execution queue and has been placed into
execution.
.IP S
for Suspend.  The job was executing and has
been suspended.   The job retains its assigned resources but does not
use cpu cycle or walltime.
.IP T
for Transiting.  The job is in process of being routed or moved to a new
destination.
.IP U
for User suspend.  The job was running on a workstation configured for cycle
harvesting and the keyboard/mouse is currently busy.  The job is suspended
until the workstation has been idle for a configured amount of time.
.IP W
for Waiting.  The 
.I Execution_Time
attribute contains a time in the future.  When
stage-in fails, PBS sets the 
.I Execution_Time attribute to a time 30 minutes in the future
and puts the job in the 
.I W
state.
.LP

Format: Character.
.br
Python attribute value type: PBS job state constant.  See the
.B PBS Professional Administrator's Guide.
.RE

.IP mtime
The time that the job was last modified, changed state, or changed locations.
.br
Format: Integer (seconds since epoch)
.br
Python attribute value type: int

.IP qtime
The time that the job entered the current queue.
.br
Format: Integer (seconds since epoch)
.br
Python attribute value type: int

.IP queue
The name of the queue in which the job currently resides.
.br
Format: String.
.br
Python attribute value type: pbs.queue

.IP queue_rank
.mc 
A number indicating the job's position with in the
queue.  Only used internally by PBS.  
.br
Readable by Manager only.
.br
Format: Integer
.br
Python attribute value type: int

.IP queue_type
An identification of the the type of queue in which the job is currently
residing.  This is provided as an aid to the scheduler.
.br
Readable by Manager only.
.br
Format: Character: The letter \*QE\*U or the letter \*QR\*U.
.br
Python attribute value type: PBS queue type constant.  See the
.B PBS Professional Administrator's Guide.

.IP "resources_used
The amount of resources used by the job.  This is provided as part of job
status information if the job is running.
.br
Format: String, list of name=value pairs: resources_used.<resource>=<value>, ...
.br
Python attribute value type: dictionary:
.br
.RS 10
resources_used["<resource name>"]=<value> 
.br
where <resource name> is any built-in or custom resource
.RE

.IP "run_version"
Used internally by PBS to track the instance of the job.  Set by PBS.
Visible to PBS Manager only.  
.br
Format: integer
.br
Python type: int

.IP schedselect 
This is set to the union of the "select" resource of the job and the queue and 
server defaults for resources in a chunk.  
.br
Can be read by PBS Manager only.
.br
Format: String
.br
Python attribute value type: pbs.select

.IP server
The name of the server which is currently managing the job.
.br
Format: String
.br
Python attribute value type: pbs.server

.IP session_id
If the job is running, this is set to the session id of the first executing
task.
.br
Format: Integer
.br
Python attribute value type: int

.IP Stageout_status
Status of stageout.  If stageout succeeded, this is set to 1.  
If stageout failed, this is 
set to 0.  Displayed only if set.  
If stageout fails for any subjob of an array job, the value of 
.I Stageout_status
is zero for the array job.  Available only for finished jobs.
.br
Format: Integer.
.br
Python attribute value type: int

.IP stime
The time when the job started execution.  Changes when job is restarted.
.br
Format: Integer (seconds since epoch)
.br
Python attribute value type: int

.IP "substate"
A numerical indicator of the substate of the job.  
.br
Format: integer.
.br
Python attribute value type: int

.IP sw_index
No longer used.

.SH SEE ALSO
qsub(1B), qalter(1B), qhold(1B), qrls(1B), pbs_resources(7B)
